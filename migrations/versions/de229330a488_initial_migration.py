"""Initial migration.

Revision ID: de229330a488
Revises:
Create Date: 2024-05-05 09:49:50.619501
"""

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op

import app

# revision identifiers, used by Alembic.
revision: str = "de229330a488"
down_revision: str | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "blog_post_series",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.Column(
            "ts_vector",
            app.datastore.db_models.TSVector(),  # type: ignore[attr-defined]
            sa.Computed("to_tsvector('english', name || ' ' || description)", persisted=True),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_blog_post_series_name"), "blog_post_series", ["name"], unique=True)
    op.create_index(
        "ix_bp_series_ts_vector",
        "blog_post_series",
        ["ts_vector"],
        unique=False,
        postgresql_using="gin",
    )
    op.create_table(
        "blog_post_tags",
        sa.Column("tag", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("tag"),
    )
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("username", sa.String(), nullable=False),
        sa.Column("full_name", sa.String(), nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("timezone", sa.String(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("avatar_location", sa.String(), nullable=True),
        sa.Column("password_hash", sa.String(), nullable=True),
        sa.Column("google_oauth_id", sa.String(), nullable=True),
        sa.Column("github_oauth_id", sa.String(), nullable=True),
        sa.Column(
            "role",
            sa.Enum("UNAUTHENTICATED", "USER", "REVIEWER", "ADMIN", name="role"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
    op.create_index(op.f("ix_users_github_oauth_id"), "users", ["github_oauth_id"], unique=False)
    op.create_index(op.f("ix_users_google_oauth_id"), "users", ["google_oauth_id"], unique=False)
    op.create_index(op.f("ix_users_username"), "users", ["username"], unique=True)
    op.create_table(
        "blog_posts",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("slug", sa.String(), nullable=False),
        sa.Column("read_mins", sa.Integer(), nullable=True),
        sa.Column("is_published", sa.Boolean(), nullable=False),
        sa.Column("can_comment", sa.Boolean(), nullable=False),
        sa.Column("thumbnail_location", sa.String(), nullable=True),
        sa.Column("markdown_description", sa.String(), nullable=False),
        sa.Column("markdown_content", sa.String(), nullable=False),
        sa.Column("html_description", sa.String(), nullable=False),
        sa.Column("html_content", sa.String(), nullable=False),
        sa.Column("html_toc", sa.String(), nullable=False),
        sa.Column("created_timestamp", sa.DateTime(), nullable=False),
        sa.Column("updated_timestamp", sa.DateTime(), nullable=False),
        sa.Column("likes", sa.Integer(), nullable=False),
        sa.Column("views", sa.Integer(), nullable=False),
        sa.Column("series_id", sa.Integer(), nullable=True),
        sa.Column("series_position", sa.Integer(), nullable=True),
        sa.Column(
            "ts_vector",
            app.datastore.db_models.TSVector(),  # type: ignore[attr-defined]
            sa.Computed("to_tsvector('english', title || ' ' || markdown_content)", persisted=True),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["series_id"], ["blog_post_series.id"], ondelete="SET NULL"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "ix_blog_post_ts_vector", "blog_posts", ["ts_vector"], unique=False, postgresql_using="gin"
    )
    op.create_index(
        op.f("ix_blog_posts_created_timestamp"), "blog_posts", ["created_timestamp"], unique=False
    )
    op.create_index(op.f("ix_blog_posts_likes"), "blog_posts", ["likes"], unique=False)
    op.create_index(op.f("ix_blog_posts_series_id"), "blog_posts", ["series_id"], unique=False)
    op.create_index(op.f("ix_blog_posts_slug"), "blog_posts", ["slug"], unique=True)
    op.create_index(op.f("ix_blog_posts_title"), "blog_posts", ["title"], unique=True)
    op.create_index(
        op.f("ix_blog_posts_updated_timestamp"), "blog_posts", ["updated_timestamp"], unique=False
    )
    op.create_index(op.f("ix_blog_posts_views"), "blog_posts", ["views"], unique=False)
    op.create_table(
        "blog_post_comments",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("blog_post_id", sa.Integer(), nullable=True),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("email", sa.String(), nullable=True),
        sa.Column("guest_id", sa.String(), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("md_content", sa.String(), nullable=False),
        sa.Column("html_content", sa.String(), nullable=False),
        sa.Column("created_timestamp", sa.DateTime(), nullable=False),
        sa.Column("updated_timestamp", sa.DateTime(), nullable=False),
        sa.Column("likes", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["blog_post_id"], ["blog_posts.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"]),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_blog_post_comments_blog_post_id"),
        "blog_post_comments",
        ["blog_post_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_blog_post_comments_created_timestamp"),
        "blog_post_comments",
        ["created_timestamp"],
        unique=False,
    )
    op.create_index(
        op.f("ix_blog_post_comments_likes"), "blog_post_comments", ["likes"], unique=False
    )
    op.create_index(
        op.f("ix_blog_post_comments_updated_timestamp"),
        "blog_post_comments",
        ["updated_timestamp"],
        unique=False,
    )
    op.create_index(
        op.f("ix_blog_post_comments_user_id"), "blog_post_comments", ["user_id"], unique=False
    )
    op.create_table(
        "blog_post_media",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("blog_post_id", sa.Integer(), nullable=True),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("locations", sa.String(), nullable=False),
        sa.Column("media_type", sa.String(), nullable=False),
        sa.Column("position", sa.Integer(), nullable=True),
        sa.Column("created_timestamp", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(["blog_post_id"], ["blog_posts.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_blog_post_media_blog_post_id"), "blog_post_media", ["blog_post_id"], unique=False
    )
    op.create_index(
        op.f("ix_blog_post_media_created_timestamp"),
        "blog_post_media",
        ["created_timestamp"],
        unique=False,
    )
    op.create_table(
        "blog_tags_associations",
        sa.Column("blog_post_id", sa.Integer(), nullable=True),
        sa.Column("blog_post_tag_id", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(["blog_post_id"], ["blog_posts.id"]),
        sa.ForeignKeyConstraint(["blog_post_tag_id"], ["blog_post_tags.tag"]),
    )
    op.create_table(
        "old_blog_slugs",
        sa.Column("slug", sa.String(), nullable=False),
        sa.Column("blog_post_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["blog_post_id"], ["blog_posts.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("slug"),
    )
    op.create_index(
        op.f("ix_old_blog_slugs_blog_post_id"), "old_blog_slugs", ["blog_post_id"], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_old_blog_slugs_blog_post_id"), table_name="old_blog_slugs")
    op.drop_table("old_blog_slugs")
    op.drop_table("blog_tags_associations")
    op.drop_index(op.f("ix_blog_post_media_created_timestamp"), table_name="blog_post_media")
    op.drop_index(op.f("ix_blog_post_media_blog_post_id"), table_name="blog_post_media")
    op.drop_table("blog_post_media")
    op.drop_index(op.f("ix_blog_post_comments_user_id"), table_name="blog_post_comments")
    op.drop_index(op.f("ix_blog_post_comments_updated_timestamp"), table_name="blog_post_comments")
    op.drop_index(op.f("ix_blog_post_comments_likes"), table_name="blog_post_comments")
    op.drop_index(op.f("ix_blog_post_comments_created_timestamp"), table_name="blog_post_comments")
    op.drop_index(op.f("ix_blog_post_comments_blog_post_id"), table_name="blog_post_comments")
    op.drop_table("blog_post_comments")
    op.drop_index(op.f("ix_blog_posts_views"), table_name="blog_posts")
    op.drop_index(op.f("ix_blog_posts_updated_timestamp"), table_name="blog_posts")
    op.drop_index(op.f("ix_blog_posts_title"), table_name="blog_posts")
    op.drop_index(op.f("ix_blog_posts_slug"), table_name="blog_posts")
    op.drop_index(op.f("ix_blog_posts_series_id"), table_name="blog_posts")
    op.drop_index(op.f("ix_blog_posts_likes"), table_name="blog_posts")
    op.drop_index(op.f("ix_blog_posts_created_timestamp"), table_name="blog_posts")
    op.drop_index("ix_blog_post_ts_vector", table_name="blog_posts", postgresql_using="gin")
    op.drop_table("blog_posts")
    op.drop_index(op.f("ix_users_username"), table_name="users")
    op.drop_index(op.f("ix_users_google_oauth_id"), table_name="users")
    op.drop_index(op.f("ix_users_github_oauth_id"), table_name="users")
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.drop_table("users")
    op.drop_table("blog_post_tags")
    op.drop_index("ix_bp_series_ts_vector", table_name="blog_post_series", postgresql_using="gin")
    op.drop_index(op.f("ix_blog_post_series_name"), table_name="blog_post_series")
    op.drop_table("blog_post_series")
    # ### end Alembic commands ###
